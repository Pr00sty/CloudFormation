Parameters:
  SourceS3Bucket:
    Type: String
    Default: pawbucket
  SourceS3ObjectKey:
    Type: String
    Default: codebuild.zip
  ArtifactStoreS3Location:
    Type: String
    Default: pawbucket

Resources:
  CodeBuildPolicy:
    Type: AWS::IAM::ManagedPolicy
    Description: Policy for CodeBuild
    Properties:
      ManagedPolicyName: codebuild-policy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - codebuild:*
              - lambda:*
              - logs:*
              - s3:*
            Resource: '*'
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - Ref: CodeBuildPolicy
      RoleName: codebuild-role
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: myProject
      ServiceRole:
        Fn::GetAtt:
          - CodeBuildRole
          - Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10

  CloudFormationPolicy:
    Type: AWS::IAM::ManagedPolicy
    Description: Policy for CloudFormation
    Properties:
      ManagedPolicyName: cloudformation-policy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - codedeploy:*
              - cloudformation:*
              - iam:*
              - lambda:*
              - s3:*
            Resource: '*'
  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - Ref: CloudFormationPolicy
      RoleName: cloudformation-role

  CodePipelinePolicy:
    Type: AWS::IAM::ManagedPolicy
    Description: Policy for CodePipeline
    Properties:
      ManagedPolicyName: codepipeline-policy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - codebuild:*
              - codedeploy:*
              - codepipeline:*
              - cloudformation:*
              - iam:*
              - logs:*
              - s3:*
            Resource: '*'
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - Ref: CodePipelinePolicy
      RoleName: codepipeline-role
  AppPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn:
        Fn::GetAtt:
          - CodePipelineRole
          - Arn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: S3
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                S3Bucket:
                  Ref: SourceS3Bucket
                S3ObjectKey:
                  Ref: SourceS3ObjectKey
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: myProject
        - Name: CreateChangeSet
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: BuildOutput
              OutputArtifacts: [ ]
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                StackName: myApplicationStack
                ChangeSetName: pipeline-changeset
                Capabilities: CAPABILITY_IAM
                TemplatePath: "BuildOutput::lambda_package.yaml"
                RoleArn:
                  Fn::GetAtt:
                    - CloudFormationRole
                    - Arn
              Region: eu-west-1
              RunOrder: 1
        - Name: Approve
          Actions:
            - Name: Approve
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: BuildOutput
              OutputArtifacts: [ ]
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                StackName: myApplicationStack
                ChangeSetName: pipeline-changeset
                Capabilities: CAPABILITY_IAM
                TemplatePath: "BuildOutput::lambda_package.yaml"
                RoleArn:
                  Fn::GetAtt:
                    - CloudFormationRole
                    - Arn
              Region: eu-west-1
              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location:
          Ref: ArtifactStoreS3Location
